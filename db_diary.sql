/*
SQLyog 企业版 - MySQL GUI v8.14 
MySQL - 5.1.49-community : Database - db_diary
*********************************************************************
*/

/*!40101 SET NAMES utf8 */;

/*!40101 SET SQL_MODE=''*/;

/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
CREATE DATABASE /*!32312 IF NOT EXISTS*/`db_diary` /*!40100 DEFAULT CHARACTER SET utf8 */;

USE `db_diary`;

/*Table structure for table `t_diary` */

DROP TABLE IF EXISTS `t_diary`;

CREATE TABLE `t_diary` (
  `diaryId` int(11) NOT NULL AUTO_INCREMENT,
  `title` varchar(60) DEFAULT NULL,
  `content` text,
  `typeId` int(11) DEFAULT NULL,
  `releaseDate` datetime DEFAULT NULL,
  PRIMARY KEY (`diaryId`),
  KEY `FK_t_diary` (`typeId`),
  CONSTRAINT `FK_t_diary` FOREIGN KEY (`typeId`) REFERENCES `t_diarytype` (`diaryTypeId`)
) ENGINE=InnoDB AUTO_INCREMENT=60 DEFAULT CHARSET=utf8;

/*Data for the table `t_diary` */

insert  into `t_diary`(`diaryId`,`title`,`content`,`typeId`,`releaseDate`) values (29,'只要你肯用心，遍地都是财富','<p>&nbsp; &nbsp; 世上从来不缺少财富，只是缺少发现财富的眼光。眼光从何而来？只要你肯用心，遍地都是财富。<br />\r\n　　<br />\r\n　　假如你是&ldquo;的哥&rdquo;，在医院门口看见两个人同时向你招手，一个手里拿着药，另一个手上拿着脸盆，你会接哪个上车？可能有人会说，当然是就近原则，谁离得近就让谁上车。上海有个&ldquo;的哥&rdquo;叫臧勤，他说应该接手上拿脸盆的人，理由很简单：手上拿药的人多半是小病小痛，不会跑到离家太远的地方去看病，而拿脸盆的人一定是住院的，路程通常会更远，同样是拉一趟客，收入却相差悬殊。<br />\r\n　　臧勤被称为&ldquo;神奇的哥&rdquo;，他在上海开了17年出租车，原本默默无闻，直到几个月前，他遇到了一位特殊乘客，才广为人知。<br />\r\n　　一天中午，臧勤在上海美罗大厦门口接到一位乘客，车子刚起步，他就跟乘客热情地聊了起来，&ldquo;终于被我守到你了，从写字楼里出来的，肯定路程不短。&rdquo;乘客一愣，自己的确要去机场，&ldquo;你怎么知道？&rdquo;他说，&ldquo;我看一个人只要3秒钟，那些在超市门口、地铁口打车，穿睡衣的人可能去机场吗？机场也不会让他们进去啊&hellip;&hellip;&rdquo;乘客不由得兴致大增，请他继续往下说。<br />\r\n　　臧勤举了一个例子：&ldquo;有一次，我在人民广场看到三个人在前面招手：第一个是年轻女子，拿着小包，刚买完东西；中间是一对青年男女，一看就是逛街的；第三个是穿羽绒服的青年男子，手上还提着笔记本电脑。我毫不犹豫地把车开到了羽绒服面前，那人上了车也觉得奇怪，说你为何放弃前面两个不接，偏偏开到我面前？我说，第一个女孩子是中午溜出来买东西的，估计公司很近；中间那对情侣是游客，没拿什么东西，不会去很远。羽绒服竖起大拇指说，你说对了，我去宝山。<br />\r\n　　&ldquo;我做过精确统计，我每天开17个小时的车，算上油费和各种费用，平均每小时的成本为34.5元。如果上来一个10元的起步价，大约要开10分钟，加上每次载客之间的平均空驶时间7分钟，等于是我花了17分钟只赚了10元钱，而17分钟的成本价是9.8元，不划算，20元到50元之间的生意性价比最高。&rdquo;乘客听得瞠目结舌，五体投地，心想今天遇上了奇人，这哪像个出租车司机，成本竟然精确到了每分钟，分明就是个成本核算师。<br />\r\n　　说话间车子已到了机场，乘客下车时，特意留下了他的电话。那位乘客名叫刘润，是微软中国公司全球技术支持部的部门经理，事后他在自己的博客上写道：&ldquo;臧勤给我上了一堂生动的MBA课！&rdquo;不久后，刘润邀请臧勤为微软公司的50名员工讲了一堂课，45分钟的演讲被掌声打断了8次。&ldquo;神奇的哥&rdquo;臧勤由此成名，先后又接受了多家企业的讲课邀请。<br />\r\n　　上海的出租车司机平均月收入在3000元左右，而臧勤每月的收入是8000元。刚开始，几乎所有同行都认为臧勤在吹牛，他又没有三头六臂，每天也得吃饭睡觉，收入怎么可能如此悬殊？有人专门到出租车公司查了他一年的营业纪录，才不得不信。臧勤把开出租车当成了事业来做，每天都仔细观察，用心总结，久而久之便练就了火眼金睛，空载率极低，效率自然比别人高出许多。<br />\r\n　　有道是，三百六十行，行行出状元。臧勤是当之无愧的&ldquo;的哥&rdquo;状元。&ldquo;神奇的哥&rdquo;其实并不神秘，不过是做事比别人更用心，仅此而已。世上从来不缺少财富，只是缺少发现财富的眼光。眼光从何而来？只要你肯用心，遍地都是财富。&nbsp;</p>\r\n',4,'2014-01-12 23:58:10'),(34,'程序猿','<h2>1<a name=\"1\"></a><a name=\"sub2321426_1\"></a>名词解释</h2>\r\n\r\n<p>是一种近几十年来出现的新物种，是信息革命的产物，在行为和物种归类上我们也可称为<strong>码字猴</strong>。程序猿是</p>\r\n\r\n<p><a href=\"http://baike.baidu.com/picview/2321426/2321426/0/d57e999477b39479d31b707e.html\" target=\"_blank\"><img alt=\"\" src=\"http://d.hiphotos.baidu.com/baike/s%3D220/sign=439e9fa1a7efce1bee2bcfc89f50f3e8/d0c8a786c9177f3eb478205a70cf3bc79f3d561d.jpg\" style=\"height:120px; width:220px\" /></a></p>\r\n\r\n<p>人类在科技研究上的一种新兴进化，拥有无与伦比的耐力、超越时代的智商、横穿社会的苦逼相和低于人类平均寿命的显著特点。</p>\r\n\r\n<p><a href=\"http://baike.baidu.com/view/2321426.htm\" target=\"_blank\"><strong>程序猿</strong></a>(<a href=\"http://baike.baidu.com/view/5230799.htm\" target=\"_blank\">Code Monkey</a>)是一种非常特殊的、可以从事程序开发、维护的动物。一般分为程序设计猿和程序编码猿，但两者的界限并不非常清楚，都可以进行开发、维护工作，特别是在<a href=\"http://baike.baidu.com/view/61891.htm\" target=\"_blank\">中国</a>，而且最重要的一点，二者都是一种非常悲剧的存在。</p>\r\n\r\n<p>另，可以理解为&rdquo;程序员&ldquo;的无奈的自我称呼。</p>\r\n\r\n<p>节日</p>\r\n\r\n<p><a href=\"http://baike.baidu.com/view/678458.htm\" target=\"_blank\">平年</a>的9月13日和<a href=\"http://baike.baidu.com/view/29649.htm\" target=\"_blank\">闰年</a>的9月12日（每年的第256天）是<a href=\"http://baike.baidu.com/view/4367098.htm\" target=\"_blank\">程序员节</a>。之所以选择256，是因为它是一个8位字节能够表示的数目，256是2的幂中小于365的<a href=\"http://baike.baidu.com/view/42187.htm\" target=\"_blank\">最大值</a>。同样的<a href=\"http://baike.baidu.com/view/1838.htm\" target=\"_blank\">逻辑</a>，在24位RGB颜色空间里，最大值为十六进制0xFFFFFF，表示为<a href=\"http://baike.baidu.com/view/121097.htm\" target=\"_blank\">白色</a>，又称白色程序猿节。</p>\r\n\r\n<h2>2<a name=\"2\"></a><a name=\"sub2321426_2\"></a>特点</h2>\r\n\r\n<p><strong>总结而言，一只优秀的程序猿通常有以下特点：</strong></p>\r\n\r\n<p>【PMonkey】对技术充满JI情（因为能够得到香蕉）</p>\r\n\r\n<p>将编程作为一种爱好（不一定，只有少数的程序猿有这一素质） 如果你允许会滔滔不绝地跟你谈论技术（程序猿使用特殊的语言，别的人或猴子很难听懂）</p>\r\n\r\n<p>【PMonkey】有过个人的开发经历（独立的寻找过香蕉或追寻母猿）</p>\r\n\r\n<p>坚持认为某种技术最好（程序猿都很固执）</p>\r\n\r\n<p>如果让他用他认为不好的技术他会非常别扭（同上）</p>\r\n\r\n<p>聪明、健谈、兴趣广泛（只限于NEET和有关宅话题）</p>\r\n\r\n<p>在大学和工作前就开始接触程序（程序猿从小就是程序猿了）</p>\r\n\r\n<p>总而言之，程序猿和它的一些同种族（如网管猿，技术猿）一样，都是人类用来帮助提高生产力的家畜，由于许多程序猿的智力很高，所以经常自己去寻找香蕉或妹子而无心工作，但这只是个别现象，总体来说程序猿是一种对人类很有用的动物，它们工作时很勤劳，而且不像 业务猿 那样喜欢跳奇怪的舞蹈（也叫增猿舞）吵的人们<a href=\"http://baike.baidu.com/picview/2321426/2321426/0/0b46f21fbe096b63c56878d30c338744ebf8ac3b.html\" target=\"_blank\"><img alt=\"夜晚较为活动之物种对照图\" src=\"http://d.hiphotos.baidu.com/baike/s%3D220/sign=92c79465277f9e2f74351a0a2f31e962/0b46f21fbe096b63c56878d30c338744ebf8ac3b.jpg\" style=\"height:168px; width:220px\" /></a></p>\r\n\r\n<p>夜晚较为活动之物种对照图</p>\r\n\r\n<p>想<a href=\"http://baike.baidu.com/view/184847.htm\" target=\"_blank\">鬼畜</a>它，程序猿一般到了30岁左右就会进化成别的猿类（一般是管理猿），不过据报道，也有一些少数一生都是没有母猿的悲剧程序猿。</p>\r\n\r\n<p>程序猿是被诅咒的悲惨生物，它们受到的诅咒有：过度的劳作、永远不足的睡眠、低廉的收入等等&hellip;&hellip;</p>\r\n\r\n<p>程序猿并不擅长战斗，它们生活中最主要的活动是&mdash;&mdash;在树叶上打洞，然后将打洞的树叶放进一个木盒子里念咒语，并声称那些是能够提高族群的食物供给或提供其他神奇功能的伟大产品。但是，因为每个程序猿打洞的方式各不相同，他们之间也会经常爆发冲突，每个程序猿都声称自己所用的打洞方式是最好最先进，打出的洞是最美最华丽的，并不惜因此用打洞的树叶互相投掷。根据一些冒险者收集到的程序猿族群的资料，所谓的打洞方式，有西珈岬式、<a href=\"http://baike.baidu.com/view/90350.htm\" target=\"_blank\">爪哇</a>式、希沙埔式等等。不过，令人惊异的是，虽然每个程序猿所用的打洞方式都不同，但它们能用几乎所有的方式来给树叶打洞，来表达&ldquo;你好，世界&rdquo;的意思&hellip;&hellip;</p>\r\n\r\n<p>因为长时间的不运动，程序猿的体力普遍低下，不擅长<a href=\"http://baike.baidu.com/view/126371.htm\" target=\"_blank\">近战</a>。不过，它们的高超智力弥补了这个缺陷。投掷打洞树叶是它们常用的攻击方式，而且，一如它们所宣称的一样，那些树叶有着一些神奇的功能&mdash;&mdash;很多冒险者在受到树叶攻击后，虽然受伤并不严重，但都不同程度表现出反应迟缓、四肢不听指挥、眼前一片蓝色等症状，甚至于昏迷不醒。不过，好在这些症状都不致命，但是这足以保护程序猿远离冒险者的侵扰。</p>\r\n\r\n<p>程序猿只为了保护栖息地才会战斗，因此，一般冒险者都会绕开它们的地界。而且，由于程序猿的智力达到了能和冒险者交流的程度，甚至有的冒险者和程序猿族群建立了良好的关系，并且得到了它们的打洞树叶作为向族群提供食物的交换&mdash;&mdash;只是这些礼物在冒险者手上远不如在程序猿手上可靠&hellip;&hellip;</p>\r\n\r\n<h2>3<a name=\"3\"></a><a name=\"sub2321426_3\"></a>开场白</h2>\r\n\r\n<p>如果人生是自我编写的程序，那么青春就是其中意味深长的代码。或简单，分解成彼此独立的字符；或复杂，拼凑成一连串的神秘语句。程序猿尝试着不断调试，不断优化，无论编译结果如何，过程才是最美。如果说代码不能复制，那么袁袁们愿意用一生去续写...</p>\r\n\r\n<h2>4<a name=\"4\"></a><a name=\"sub2321426_4\"></a>社会结构</h2>\r\n\r\n<p>成群，一般2～10程序猿组成一个小组，数个小组合成一个团队。</p>\r\n\r\n<h2>5<a name=\"5\"></a><a name=\"sub2321426_5\"></a>日常行为</h2>\r\n\r\n<h3><a name=\"5_1\"></a><a name=\"sub2321426_5_1\"></a>准备工作</h3>\r\n\r\n<p>&ldquo;工欲善其事必先利其器。&rdquo;</p>\r\n\r\n<p>1.电脑不一定要配置高，但是双屏是<a href=\"http://baike.baidu.com/view/1461853.htm\" target=\"_blank\">必须的</a>，越大越好，能一个横屏一个竖屏更好。一个用来查资料，一个用来写<a href=\"http://baike.baidu.com/view/41.htm\" target=\"_blank\">代码</a>。总之要显得信息量很大，效率很高。</p>\r\n\r\n<p>2.椅子不一定要舒服，但是一定要可以半躺着。</p>\r\n\r\n<p>3.大量的<a href=\"http://baike.baidu.com/view/543118.htm\" target=\"_blank\">便签</a>，各种的颜色的，用来记录每天要完成的事务，多多益善。沿着电脑屏幕的边框，尽量贴满，显出有很多事情的样子。</p>\r\n\r\n<p>4.工具书，orelly的，机械工业，电子工业什么的都可以，能英文就英文，不行影印版的也可以，反正越厚越好，而且千万不要放在书架上，一定要堆在桌上，半打开状。</p>\r\n\r\n<h3><a name=\"5_2\"></a><a name=\"sub2321426_5_2\"></a>从进门开始</h3>\r\n\r\n<p>1.着装！着装！不管你是去实验室，或者去公司的大楼，在或者是小公司的民宅，或是自己创业的黑作坊；无论是春夏秋冬白天晚上刮风下雨电闪雷鸣台风龙卷风，一个装b的程序员必须要十分在意自己着装！这里只提出参考建议。初级装：衬衣+牛仔裤+休闲鞋。中级装：T恤+宽松短裤+拖鞋。高级装：背心+宽松大花裤衩+人字拖。</p>\r\n\r\n<p>2.得体的举止。在走廊以及任何形式的过道里，一定要双手插兜，走得像个痞子，至少要看起来有点反社会，如若不行，可走文弱天才型geek路线。。</p>\r\n\r\n<p>3.如果有女性在你背后指指点点，小声嘀咕说这一定是一个技术男的时候，应该先低头，然后保持低头状态，缓缓回头，坏坏地蔑笑但是不要出声，然后快步前行。</p>\r\n\r\n<p>4.进门后，一定不要跟任何人打招呼，笔直走向自己的位置，最多路过打一杯咖啡，千万不要有多余的动作，显示出自己的专注与<a href=\"http://baike.baidu.com/view/90400.htm\" target=\"_blank\">心无旁骛</a>。</p>\r\n\r\n<h3><a name=\"5_3\"></a><a name=\"sub2321426_5_3\"></a>坐下就不要再动</h3>\r\n\r\n<p>1.坐下以后，姿势需要略微后仰，能翘着二郎腿最好了，然后在后仰的情况下<a href=\"http://baike.baidu.com/view/8481650.htm\" target=\"_blank\">低着头</a>，以便看到屏幕，然后千万就不要再动了。</p>\r\n\r\n<p>2.粗暴地把电脑前的大堆书推开一个口，然后摘下电脑上的一个便签，看一眼，不过3秒，可以开始coding了。</p>\r\n\r\n<p>3.能不用IDE就不要用，实在装不了，无论IDE是什么，一定要调成DOS那种黑色背景的。</p>\r\n\r\n<p>4.如果写前台界面，就不停地调试后台代码；如果写java，就在里面混编C；如果写C，就在里面混编汇编。不光要coding，还要时不时的翻出一本什么英文的书翻一翻，看不懂就看看插图，然后扔到面前假装懂了继续coding。</p>\r\n\r\n<p>5.什么看起来高端就用什么，不要管实用不实用。例如对C++：switch统统重构成多态；如果有指针，统统改成智能的；C++一定要自己写 template；数字是全部要替换成宏的名字能起多长就起多长；struct就不要出现了，如果出现，也一定要用__attriburte__修饰一下；运算都是位操作的；操作符都是重载的；网络都是并发缓冲线程池的；int只用int32_t声明的;继承不用普通的，什么多继承虚继承啊；helloworld也要写捕获异常的；后人一看代码，中间一堆关键字 extern,asm,auto,XXXXX_cast,volatile,explicit,register,template，让一般总在敲 int,if,else,for的小<a href=\"http://baike.baidu.com/view/39175.htm\" target=\"_blank\">程序员</a>顿时心生崇拜。</p>\r\n\r\n<p>6.注释？算了吧。只有两个路线可以选：一，变量名起得巨长无比，看代码就和读英文文章一样顺畅，根本不需要加注释。 二，代码无比晦涩，加不加注释根本无影响。</p>\r\n\r\n<p>7.千万不要用IM工具交流，千万不要问同事问题，显得自己没有水平，都是自己上网或者查书。</p>\r\n\r\n<p>8.无论是同事间开玩笑或者发生任何群体性时间，不要抬头，更不要东张西望，即使地震火灾，也一定要先提交代码再行离开。</p>\r\n\r\n<h3><a name=\"5_4\"></a><a name=\"sub2321426_5_4\"></a>潇洒地离开</h3>\r\n\r\n<p>1.人走，主机是千万千万不能关的，至少要跑个daily build，实在不行正在svn提交也勉强算过关。</p>\r\n\r\n<p>2.书应该已经又堆到屏幕前了，千万不要整理，明天再来推开。</p>\r\n\r\n<p>3.不强求最后一个走，但一定要所有的非程序员，什么市场啊前台啊pm啊都<a href=\"http://baike.baidu.com/view/6240093.htm\" target=\"_blank\">走光</a>了，才可以走。</p>\r\n\r\n<p>4.走得时候一定要率性，千万不要收拾任何东西，站起来，出门，好的，就这样。</p>\r\n\r\n<p>5.如果今天一定要说句话的话，找到那个最<a href=\"http://baike.baidu.com/view/4259084.htm\" target=\"_blank\">苦逼</a>的<a href=\"http://baike.baidu.com/view/39175.htm\" target=\"_blank\">程序员</a>，跟他说，你进度太慢了啊，不要老让我等你。</p>\r\n\r\n<h3><a name=\"5_5\"></a><a name=\"sub2321426_5_5\"></a>作息时间</h3>\r\n\r\n<p>每天早上08:00～11:30 进入车间堆代码。</p>\r\n\r\n<p>中午11:30～13:00进食，放风时间。</p>\r\n\r\n<p>下午13:00～18:00进入车间堆代码。</p>\r\n\r\n<p>大部分的程序猿 在18:00以后继续堆代码，一直到深夜。</p>\r\n\r\n<p>大部分的程序猿需要加班，经常加班，白加班。</p>\r\n\r\n<p>所谓生命不息，加班不止 是他们的座右铭。</p>\r\n\r\n<h2>6<a name=\"6\"></a><a name=\"sub2321426_6\"></a>有关笑话</h2>\r\n\r\n<p>1、新春对联上联：为系统而生，为框架而死，为debug奋斗一辈子下联：吃符号的亏，上大小写的当，最后死在需求上！横批：杯具程序员。</p>\r\n\r\n<p>2、为什么程序员总是分不清万圣节和圣诞节？因为 Oct 31 == Dec 25。</p>\r\n\r\n<p>3、男：我是程序猿。</p>\r\n\r\n<p>女：哦，程先生，你好。</p>\r\n\r\n<p>男：客气了，叫我序猿就好~</p>\r\n\r\n<p>4、我是你的什么，你是我的程序猿，啊？？原来我是猴子啊，<a href=\"http://baike.baidu.com/view/23542.htm\" target=\"_blank\">酱紫</a>我就可以让你耍coding啦！！！</p>\r\n\r\n<p>5、怎么使用面向对象的方式变得富有？继承。</p>\r\n\r\n<p>6、一男子在路边一根接着一根地抽烟。一个女士走过来对他说：&ldquo;嘿，你不知道你是在慢性自杀吗？注意看看烟盒上的警告信息。&rdquo;&ldquo;没关系&rdquo;，男子悠然自得地又吸了一口：&ldquo;我是个程序猿。&rdquo;&ldquo;嗯？这和你是程序猿有什么关系？&rdquo;&ldquo;我们一点儿也不在乎警告（warning），我们只在乎错误（error）。&rdquo;</p>\r\n\r\n<p>7、问：程序员最讨厌康熙的哪个儿子。答：胤禩。因为他是八阿哥（bug）。</p>\r\n\r\n<p>8、换一个电灯泡需要几个程序员？一个也不要，这是硬件问题</p>\r\n\r\n<p>9、危楼高百尺，手可写代码；举头望明月，低头写代码；王师北定中原日，家祭无忘写代码；</p>\r\n\r\n<p>10、孤帆远影碧空尽，唯见代码眼前流</p>\r\n\r\n<p>11、声卡凄切，对电脑晚，检查初歇。 项目需求无绪，可恨处，邮件催发。 执手相看代码，竟无语凝噎。 念去去千行代码，眼皮沉沉电脑破。 多情自古源代码，更那堪，冷落情人节，今宵酒醒何处。电脑旁，晓风残月，此去经年，爱情硬是形同虚设。 便纵有千般无奈，更与何人说？</p>\r\n\r\n<p>12、你只看到我在不停的忙碌，却没看到我奋进的热情，你有你的朝九晚五，我有我的通宵达旦，我可怜你体会不了执行出结果的那种成就感。Code是注定痛苦的旅行...</p>\r\n\r\n<p>13、一句话证明你爱过！ 《我不愿让你一个人写代码&hellip;&hellip;》 不服来辩</p>\r\n\r\n<p>14、我是一个搬砖狂，搬砖本领强。。总有一天心血来潮，倒在砖头旁。。。</p>\r\n\r\n<p>15、漫道coding无悔不，养家糊口故。年华虚度，青春总被bug误。望断吊丝路，有女神，不得护。 默忆少年游无度，心怀天下牧。流年暗促，胸中豪情不堪负。风华又起时，不忍顾，年娇处。</p>\r\n\r\n<p>16、一个MD5函数吃惊地指着另一个MD5函数说：&ldquo;你的哈希结果为什么和我的不一样？&rdquo; 那个MD5函数骄傲地说，&ldquo;我喂自己袋盐。&rdquo;</p>\r\n\r\n<p>17、昨天，一位男生向他心仪的程旭媛妹纸送了一份写的16万行代码的程序。这份程序包括嵌入式、JAVA、C++等多种语言，内容主要是回忆两人在一起做的课设和借景抒怀。他将其做成Repo并commit到Github上，取名《我不愿让你一个人写代码》。妹纸十分感动，然后拒绝了他</p>\r\n\r\n<p>18、bug众多，今胜昨，回调长似秋千索。溢出栈，抛异常，码至凌晨，咽泪妆欢，难难难！</p>\r\n\r\n<p>19、少年投身IT行，老来无伴又何妨。擦肩美女不屑看，三千码友在身旁。</p>\r\n\r\n<p>20、夜半话凄凉，转眼泪千行，日日工期紧，亦为重构忙。久易无定论，命悬需求方，四顾前途路，一步三踉跄。</p>\r\n\r\n<p>21、白发三千丈，coding泪两行，不识加班累，只缘bug狂。</p>\r\n\r\n<p>22、幸得进某康，IT放两旁，闲来把码敲，余音仍绕梁。码农压力大，愿君更健康！</p>\r\n\r\n<p>23、少时狂发编程想，无畏赴身IT行。纵使荣华未可近，我自coding又何妨！</p>\r\n\r\n<p>24、 夜夜搞项目，敲码三四点。郁郁无头绪，哽咽等天亮。放手搏一搏，程序全报错。妹子人家牵，bug自己查。方法属性类，一个都不会。左右不是人，猿来程序员。</p>\r\n\r\n<p>25、无数假期渺茫茫，夜三更，bug调出千百行；香烟一半，犹如饥渴似疯狂。抬起头颅，细数窗前星光，人生历历何等惆怅；思量思量，日何已出，为何希望依久不晴朗！</p>\r\n\r\n<p>26、 年少太轻狂，误入IT行。白发森森立，两眼直茫茫。语言数十种，无一称擅长。三十而立时，无房单身郎。</p>\r\n\r\n<p>27、年少不经事，埋头编程忙。 指键铿锵落，不及细思量。 bug千百个，comment无一行。 休言敏捷易，做来断人肠。</p>\r\n\r\n<p>28、在那山的这边海的那边有一群苦逼的程序员</p>\r\n\r\n<p>他们老实又胹腆 　他们聪明又木钱 　他们一天到晚坐在那里熬夜写软件 　饿了就咬一口方便面～～ 　哦苦逼的程序员 　哦苦逼的程序员 　只要一改需求他们就要重新搞一遍 　但是期限只剩下两天</p>\r\n\r\n<p>29、十年生死两茫茫，写程序，到天亮。 千行代码，Bug何处藏。 纵使上线又怎样，朝令改，夕断肠。 领导每天新想法，天天改，日日忙。 相顾无言，惟有泪千行。 每晚灯火阑珊处，程序员，又加班,工作狂~</p>\r\n\r\n<p>30、写字楼里写字间，写字间里程序员； 程序人员写程序，又拿程序换酒钱。 酒醒只在网上坐，酒醉还来网下眠； 酒醉酒醒日复日，网上网下年复年。 但愿老死电脑间，不愿鞠躬老板前； 奔驰宝马贵者趣，公交自行程序员。 别人笑我忒疯癫，我笑自己命太贱； 不见满街漂亮妹，哪个归得程序员。</p>\r\n\r\n<p>31、当代的程序员，其实就是远古的巫师。他们通过一些普通人不理解的符号和语法，与某个世界的自然法则相沟通，进而实现人类需要的奇迹</p>\r\n\r\n<p>32、程序员问禅师：&ldquo;我和在一起 7年的女友分手了，程序员是否诸多和爱情无缘?&rdquo;</p>\r\n\r\n<p>禅师笑而不语，把程序员带到正在比赛的球场。</p>\r\n\r\n<p>程序员大悟：&ldquo;大师的意思是否是说：爱情的意义就像一场比赛，只要过程努力过，结果如何并不重要?&rdquo;</p>\r\n\r\n<p>大师闭上眼睛道：&ldquo;你分手关我球事?&rdquo;</p>\r\n\r\n<p>33、当世界末日还有5分钟就要到来的时候</p>\r\n\r\n<p>程序员: 让我们在这最后的时刻作些什么吧!</p>\r\n\r\n<p>女友: 那好,让我们在做最后一次吧!</p>\r\n\r\n<p>程序员: 那剩下的4分50秒做什么啊?</p>\r\n\r\n<p>34、一个程序员骑着一个很漂亮的自行车到了公司，另一个程序员看到了他，问到，&ldquo;你是从哪搞到的这么漂亮的车的？&rdquo;</p>\r\n\r\n<p>骑车的那个程序员说，&ldquo;我刚从那边过来，有一个漂亮的姑娘骑着这个车过来，并停在我跟前，把衣服全脱了，然后对我说，&lsquo;你想要什么都可以&rsquo;&rdquo;。</p>\r\n\r\n<p>另一个程序员马上说到，&ldquo;你绝对做了一个正确的选择，因为那姑娘的衣服你并不一定穿得了&rdquo;。</p>\r\n\r\n<p>35、我也不知道为什么，我一说我是搞PHP的，她们就把灯都灭了。</p>\r\n',4,'2014-01-13 00:14:50'),(36,'今天很开心','<p>完成了个人日记本系统的开发</p>\r\n',1,'2018-04-16 21:23:46'),(50,'互联网公司','<p><strong>公司简介</strong></p>\r\n\r\n<p>上海携宁科技公司成立于2003年，是一家专注于金融行业业务管理系统（平台）研发与服务的软件供应商。目前的信息管理系统（平台）产品处于行业领先水平，已有超过110家金融投资机构使用了公司的产品，客户覆盖证券、基金、保险、私募、信托公司等。证券行业的国泰君安证券、海通证券、中信证券、中金公司、华夏基金、嘉实基金、南方基金、易方达基金、华安基金；保险行业的人保公司、平安保险、太平洋保险等旗下的资产管理公司，都是公司的客户。</p>\r\n\r\n<p>公司位于漕河泾开发区，现有员工将近600人，2017年销售额达到一亿多，公司在北京、深圳、广州设有分支机构，在武汉设有研发中心。</p>\r\n\r\n<p>创新、活力是公司始终不变的理念，这是一个自我提升、成就事业的舞台，是牛人，等你来!</p>\r\n\r\n<p><strong>主要产品</strong></p>\r\n\r\n<p>金融投资研究管理系统、另类投资业务管理系统、信用评级管理系统、指标中心、客户管理系统、企业移动综合解决方案、报告自动生成平台、基金销售系统、专业研究报告阅读平台等。</p>\r\n\r\n<p><strong>公司福利</strong></p>\r\n\r\n<ul>\r\n	<li>缴纳五险一金、补充商业保险（含意外伤害险、意外住院津贴、门诊医疗、住院医疗、寿险、大病险等六个险种）；</li>\r\n	<li>年度旅游、年度体检、年会；</li>\r\n	<li>每月车贴饭贴、举办篮球、足球、羽毛球等群众性体育健身运动、员工庆生会并且发放生日礼券；</li>\r\n	<li>每日下午茶、不定期员工培训；&nbsp;&nbsp;&nbsp;</li>\r\n</ul>\r\n\r\n<p>办理居住证，满一定期限可转办上海户籍</p>\r\n\r\n<p><strong>软件开发工程师-金融方向（工作地点：上海、武汉，由应聘者自由选择）</strong></p>\r\n\r\n<p>职位要求：1、熟悉Java和前后端分离开发方式；</p>\r\n\r\n<p>2、熟悉设计模式、了解数据建模、掌握数据库设计；</p>\r\n\r\n<p>3、课外喜欢独立开发应用小软件；</p>\r\n\r\n<p>4、参与过实际项目开发的优先录用。<a name=\"_GoBack\"></a></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>公司地址：上海市徐汇区田林路200号A2幢7楼整层</p>\r\n\r\n<p>联系电话：64483337 人力资源部&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 公司网址：www.sinitek.com</p>\r\n',1,'2018-05-18 22:47:36'),(51,'项目经验','<p><strong>2017.12 -- 2018.01&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong><strong>库存管理系统</strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong><strong>负责前端</strong><strong>easyui</strong><strong>页面制作，后端</strong><strong>ssm</strong><strong>框架的搭建</strong></p>\r\n\r\n<p>基于Spring+SpringMvc+Mybatis框架实现的库存管理系统，前台页面使用easyui，数据库使用Mysql</p>\r\n\r\n<p><strong>◆可实现的功能：</strong></p>\r\n\r\n<ul>\r\n	<li>供应商管理、商品出入库及库存管理、销售利润统计，库存、保质期预警等</li>\r\n	<li>各个模块均实现查询、添加、修改、删除、导入导出Excel表格功能</li>\r\n</ul>\r\n\r\n<p><strong>◆项目亮点：</strong></p>\r\n\r\n<ul>\r\n	<li>自主独立完成。理解ssm框架的搭建和实现流程，各个<strong>层间的关系</strong>，<strong>前后台传值</strong>等</li>\r\n	<li>掌握java中<strong>集合、泛型、反射</strong>等重要基础知识点，掌握<strong>List</strong><strong>、</strong><strong>Map</strong>及<strong>泛型集合</strong>等用法和实现原理</li>\r\n	<li>熟练掌握Mysql数据库基础操作，理解<strong>mybatis</strong><strong>与数据库交互</strong>实现原理</li>\r\n</ul>\r\n\r\n<ul>\r\n	<li>熟悉前台页面JavaScript语句，能够使用easyui框架进行前台简单页面的开发</li>\r\n	<li>理解json传值的实现过程，熟练掌握poi组件实现<strong>Excel</strong><strong>导入导出</strong></li>\r\n</ul>\r\n',1,'2018-04-21 15:21:40'),(52,'重要的决定','<p>2018.4.21，在这一天，我正式向领导提出了辞职。不知道我的决定是否正确，但我知道只要我一直努力，未来就不会让我失望！<br />\r\n&nbsp;</p>\r\n',7,'2018-05-18 22:46:43'),(53,'矿大图书馆','<p>今天来图书馆学习了。毕业快一年，又来到了曾经的校园。在图书馆学习的感觉真的很好，希望以后可以经常来这里，看看书，安静地学习。内心很平静，烦恼也不复存在，这样心情也得到了慰藉。</p>\r\n',2,'2018-05-13 21:56:59'),(54,'韩冬','<p>今天见到了高二认识的一个妹子，叫韩冬。她过来徐州这里面试事业单位，希望她能面试成功，这样以后可以多一个人一起玩耍。</p>\r\n\r\n<p>----2018.5.26&nbsp; 妹子没上岸，mmp</p>\r\n',2,'2018-05-27 14:14:41'),(55,'做自己喜欢做的事情','<p>真的对土木无爱，虽然现在来了甲方，但已经不是校招生，再加上目前的岗位没什么前途，我还是想遵从自己的内心，转行去做我喜欢做的事情！</p>\r\n\r\n<p>到底我的路该怎么走，不想再迷茫！</p>\r\n\r\n<p>&nbsp;</p>\r\n',4,'2018-05-27 17:10:30'),(56,'SSM框架下各个层的解释说明','<h3 style=\"color:rgb(0, 0, 0); font-style:normal\">持久层：DAO层（mapper）</h3>\r\n\r\n<ul>\r\n	<li>DAO层：DAO层主要是做数据持久层的工作，负责与数据库进行联络的一些任务都封装在此，&nbsp;\r\n	<ul>\r\n		<li>DAO层的设计首先是设计DAO的接口，</li>\r\n		<li>然后在Spring的配置文件中定义此接口的实现类，</li>\r\n		<li>然后就可在模块中调用此接口来进行数据业务的处理，而不用关心此接口的具体实现类是哪个类，显得结构非常清晰，</li>\r\n		<li>DAO层的数据源配置，以及有关数据库连接的参数都在Spring的配置文件中进行配置。</li>\r\n	</ul>\r\n	</li>\r\n</ul>\r\n\r\n<h3 style=\"color:rgb(0, 0, 0); font-style:normal\">业务层：Service层</h3>\r\n\r\n<ul>\r\n	<li>Service层：Service层主要负责业务模块的逻辑应用设计。&nbsp;\r\n	<ul>\r\n		<li>首先设计接口，再设计其实现的类</li>\r\n		<li>接着再在Spring的配置文件中配置其实现的关联。这样我们就可以在应用中调用Service接口来进行业务处理。</li>\r\n		<li>Service层的业务实现，具体要调用到已定义的DAO层的接口，</li>\r\n		<li>封装Service层的业务逻辑有利于通用的业务逻辑的独立性和重复利用性，程序显得非常简洁。</li>\r\n	</ul>\r\n	</li>\r\n</ul>\r\n\r\n<h3 style=\"color:rgb(0, 0, 0); font-style:normal\">表现层：Controller层（Handler层）</h3>\r\n\r\n<ul>\r\n	<li>Controller层:Controller层负责具体的业务模块流程的控制，&nbsp;\r\n	<ul>\r\n		<li>在此层里面要调用Service层的接口来控制业务流程，</li>\r\n		<li>控制的配置也同样是在Spring的配置文件里面进行，针对具体的业务流程，会有不同的控制器，我们具体的设计过程中可以将流程进行抽象归纳，设计出可以重复利用的子单元流程模块，这样不仅使程序结构变得清晰，也大大减少了代码量。</li>\r\n	</ul>\r\n	</li>\r\n</ul>\r\n\r\n<h3 style=\"color:rgb(0, 0, 0); font-style:normal\">View层</h3>\r\n\r\n<ul>\r\n	<li>View层 此层与控制层结合比较紧密，需要二者结合起来协同工发。View层主要负责前台jsp页面的表示.</li>\r\n</ul>\r\n\r\n<h3 style=\"color:rgb(0, 0, 0); font-style:normal\">各层联系</h3>\r\n\r\n<ul>\r\n	<li>DAO层，Service层这两个层次都可以单独开发，互相的耦合度很低，完全可以独立进行，这样的一种模式在开发大项目的过程中尤其有优势</li>\r\n	<li>\r\n	<p>Controller，View层因为耦合度比较高，因而要结合在一起开发，但是也可以看作一个整体独立于前两个层进行开发。这样，在层与层之前我们只需要知道接口的定义，调用接口即可完成所需要的逻辑单元应用，一切显得非常清晰简单。</p>\r\n	</li>\r\n	<li>\r\n	<p>Service逻辑层设计</p>\r\n\r\n	<ul>\r\n		<li>Service层是建立在DAO层之上的，建立了DAO层后才可以建立Service层，而Service层又是在Controller层之下的，因而Service层应该既调用DAO层的接口，又要提供接口给Controller层的类来进行调用，它刚好处于一个中间层的位置。每个模型都有一个Service接口，每个接口分别封装各自的业务处理方法。</li>\r\n	</ul>\r\n	</li>\r\n</ul>\r\n\r\n<h3 style=\"color:rgb(0, 0, 0); font-style:normal\">SSM框架整合说明</h3>\r\n\r\n<p>整合Dao层</p>\r\n\r\n<p>MyBatis配置文件&nbsp;<code>sqlMapConfig.xml</code></p>\r\n\r\n<ul>\r\n	<li>配置别名：用于批量扫描Pojo包</li>\r\n	<li>不需要配置mappers标签，但一定要保证<code>mapper.java</code>文件与<code>mapper.xml</code>文件同名。</li>\r\n</ul>\r\n\r\n<pre>\r\n<code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;  \r\n&lt;!DOCTYPE configuration PUBLIC &quot;-//mybatis.org//DTD Config 3.0//EN&quot; &quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;&gt;  \r\n\r\n    &lt;configuration&gt; \r\n        &lt;!-- 配置别名 --&gt;  \r\n        &lt;typeAliases&gt;  &lt;!-- 批量扫描别名 --&gt;  \r\n            &lt;package name=&quot;cn.itcast.ssm.po&quot;/&gt;  \r\n        &lt;/typeAliases&gt;  \r\n    &lt;/configuration&gt;</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Spring配置文件&nbsp;<code>applicationContext-dao.xml</code></p>\r\n\r\n<ul>\r\n	<li>主要配置内容&nbsp;\r\n	<ul>\r\n		<li>数据源</li>\r\n		<li>SqlSessionFactory</li>\r\n		<li>mapper扫描器&nbsp;\r\n		<ul>\r\n			<li>这里使用<code>sqlSessionFactoryBeanName</code>属性是因为如果配置的是<code>sqlSessionFactory</code>属性，将不会先加载数据库配置文件及数据源配置</li>\r\n		</ul>\r\n		</li>\r\n	</ul>\r\n	</li>\r\n</ul>\r\n\r\n<pre>\r\n<code>&lt;beans xmlns=&quot;http://www.springframework.org/schema/beans&quot;\r\n    xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:mvc=&quot;http://www.springframework.org/schema/mvc&quot;\r\n    xmlns:context=&quot;http://www.springframework.org/schema/context&quot;\r\n    xmlns:aop=&quot;http://www.springframework.org/schema/aop&quot; xmlns:tx=&quot;http://www.springframework.org/schema/tx&quot;\r\n    xsi:schemaLocation=&quot;http://www.springframework.org/schema/beans \r\n        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd \r\n        http://www.springframework.org/schema/mvc \r\n        http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd \r\n        http://www.springframework.org/schema/context \r\n        http://www.springframework.org/schema/context/spring-context-3.2.xsd \r\n        http://www.springframework.org/schema/aop \r\n        http://www.springframework.org/schema/aop/spring-aop-3.2.xsd \r\n        http://www.springframework.org/schema/tx \r\n        http://www.springframework.org/schema/tx/spring-tx-3.2.xsd &quot;&gt;\r\n\r\n\r\n    &lt;!-- 加载db.properties文件中的内容，db.properties文件中key命名要有一定的特殊规则 --&gt;\r\n    &lt;context:property-placeholder location=&quot;classpath:db.properties&quot; /&gt;\r\n    &lt;!-- 配置数据源 ，dbcp --&gt;\r\n\r\n    &lt;bean id=&quot;dataSource&quot; class=&quot;org.apache.commons.dbcp.BasicDataSource&quot; destroy-method=&quot;close&quot;&gt;\r\n        &lt;property name=&quot;driverClassName&quot; value=&quot;${jdbc.driver}&quot; /&gt;\r\n        &lt;property name=&quot;url&quot; value=&quot;${jdbc.url}&quot; /&gt;\r\n        &lt;property name=&quot;username&quot; value=&quot;${jdbc.username}&quot; /&gt;\r\n        &lt;property name=&quot;password&quot; value=&quot;${jdbc.password}&quot; /&gt;\r\n        &lt;property name=&quot;maxActive&quot; value=&quot;30&quot; /&gt;\r\n        &lt;property name=&quot;maxIdle&quot; value=&quot;5&quot; /&gt;\r\n    &lt;/bean&gt;\r\n\r\n    &lt;!-- sqlSessionFactory --&gt;\r\n    &lt;bean id=&quot;sqlSessionFactory&quot; class=&quot;org.mybatis.spring.SqlSessionFactoryBean&quot;&gt;\r\n        &lt;!-- 数据库连接池 --&gt;\r\n        &lt;property name=&quot;dataSource&quot; ref=&quot;dataSource&quot; /&gt;\r\n        &lt;!-- 加载mybatis的全局配置文件 --&gt;\r\n        &lt;property name=&quot;configLocation&quot; value=&quot;classpath:mybatis/sqlMapConfig.xml&quot; /&gt;\r\n    &lt;/bean&gt;\r\n\r\n    &lt;!-- mapper扫描器 --&gt;\r\n    &lt;bean class=&quot;org.mybatis.spring.mapper.MapperScannerConfigurer&quot;&gt;\r\n        &lt;!-- 扫描包路径，如果需要扫描多个包，中间使用半角逗号隔开 --&gt;\r\n        &lt;property name=&quot;basePackage&quot; value=&quot;cn.itcast.ssm.mapper&quot;&gt;&lt;/property&gt;\r\n        &lt;property name=&quot;sqlSessionFactoryBeanName&quot; value=&quot;sqlSessionFactory&quot; /&gt;\r\n    &lt;/bean&gt;\r\n&lt;/beans&gt;</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>创建所需的Mapper.java</p>\r\n\r\n<ul>\r\n	<li>一般不动原始生成的po类，而是将原始类进行集成vo类</li>\r\n</ul>\r\n\r\n<pre>\r\n<code>public interface ItemsMappperCustom{\r\n    public List&lt;ItemsCustom&gt; findItemsList(ItemsQueryVo itemsQueryVo) throws Exception;\r\n}</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>创建POJO类对应的mapper.xml</p>\r\n\r\n<pre>\r\n<code>&lt;mapper namespace=&quot;test.ssm.mapper.ItemsMappperCustom&quot;&gt;\r\n    &lt;select id=&quot;findItemsList&quot; parameterTyep=&quot;test.ssm.po.ItemsQueryVo&quot; resultType=&quot;test.ssm.po.ItemsCustom&quot;&gt;\r\n    select items.* from items\r\n    where items.name like &#39;%${itemsCustom.name}%&#39;</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<hr />\r\n<p>整合service层</p>\r\n\r\n<ul>\r\n	<li>目标：让spring管理service接口。</li>\r\n</ul>\r\n\r\n<p>定义service接口</p>\r\n\r\n<ul>\r\n	<li>一般在ssm.service包下定义接口 eg：ItemsService</li>\r\n</ul>\r\n\r\n<pre>\r\n<code>public interfae ItemsService{\r\n    public List&lt;ItemsCustom&gt; findItemsList(ItemsQueryVo itemsQueryVo) throws Exception;\r\n}</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>定义ServiceImpl实现类</p>\r\n\r\n<ul>\r\n	<li>因为在<code>applicationContext-dao.xml</code>中已经使用了mapper扫描器，这里可以直接通过注解的方式将itemsMapperCustom自动注入。</li>\r\n</ul>\r\n\r\n<pre>\r\n<code>public class ItemsServiceImpl implements ItemsService{\r\n\r\n    @Autowired\r\n    private ItemsMapperCustom itemsMapperCustom;\r\n\r\n    @Override\r\n    public List&lt;ItemsCustom&gt; findItemsList(ItemsQueryVo itemsQueryVo) throws Exception{\r\n        return itemsMapperCustom.findItemsList(itemsQueryVo);\r\n    }\r\n}</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>在spring容器配置service</p>\r\n\r\n<ul>\r\n	<li><code>applicationContext-service.xml</code>在此文件中配置service。</li>\r\n</ul>\r\n\r\n<pre>\r\n<code>&lt;bean id=&quot;itemsService&quot; class=&quot;test.ssm.service.impl.ItemsSrviceImpl&quot;/&gt;</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>事物控制（不够熟悉）</p>\r\n\r\n<ul>\r\n	<li>在<code>applicationContext-transaction.xml</code>中使用spring声明式事务控制方法</li>\r\n	<li>对mybatis操作数据库事物控制，spring使用jdbc的事物控制类是<code>DataSourceTransactionManager</code></li>\r\n	<li>因为操作了数据库需要事物控制，所以需要配置数据源</li>\r\n	<li>定义了切面</li>\r\n</ul>\r\n\r\n<pre>\r\n<code>&lt;beans xmlns=&quot;http://www.springframework.org/schema/beans&quot;\r\n    xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:mvc=&quot;http://www.springframework.org/schema/mvc&quot;\r\n    xmlns:context=&quot;http://www.springframework.org/schema/context&quot;\r\n    xmlns:aop=&quot;http://www.springframework.org/schema/aop&quot; xmlns:tx=&quot;http://www.springframework.org/schema/tx&quot;\r\n    xsi:schemaLocation=&quot;http://www.springframework.org/schema/beans \r\n        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd \r\n        http://www.springframework.org/schema/mvc \r\n        http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd \r\n        http://www.springframework.org/schema/context \r\n        http://www.springframework.org/schema/context/spring-context-3.2.xsd \r\n        http://www.springframework.org/schema/aop \r\n        http://www.springframework.org/schema/aop/spring-aop-3.2.xsd \r\n        http://www.springframework.org/schema/tx \r\n        http://www.springframework.org/schema/tx/spring-tx-3.2.xsd &quot;&gt;\r\n\r\n&lt;!-- 事务管理器 对mybatis操作数据库事务控制，spring使用jdbc的事务控制类 --&gt;\r\n&lt;bean id=&quot;transactionManager&quot; class=&quot;org.springframework.jdbc.datasource.DataSourceTransactionManager&quot;&gt;\r\n    &lt;!-- 数据源在 dataSource在applicationContext-dao.xml中已经配置--&gt;\r\n    &lt;property name=&quot;dataSource&quot; ref=&quot;dataSource&quot;/&gt;\r\n&lt;/bean&gt;\r\n\r\n&lt;!-- 通知 --&gt;\r\n&lt;tx:advice id=&quot;txAdvice&quot; transaction-manager=&quot;transactionManager&quot;&gt;\r\n    &lt;tx:attributes&gt;\r\n        &lt;!-- 传播行为 --&gt;\r\n        &lt;tx:method name=&quot;save*&quot; propagation=&quot;REQUIRED&quot;/&gt;\r\n        &lt;tx:method name=&quot;delete*&quot; propagation=&quot;REQUIRED&quot;/&gt;\r\n        &lt;tx:method name=&quot;insert*&quot; propagation=&quot;REQUIRED&quot;/&gt;\r\n        &lt;tx:method name=&quot;update*&quot; propagation=&quot;REQUIRED&quot;/&gt;\r\n        &lt;tx:method name=&quot;find*&quot; propagation=&quot;SUPPORTS&quot; read-only=&quot;true&quot;/&gt;\r\n        &lt;tx:method name=&quot;get*&quot; propagation=&quot;SUPPORTS&quot; read-only=&quot;true&quot;/&gt;\r\n        &lt;tx:method name=&quot;select*&quot; propagation=&quot;SUPPORTS&quot; read-only=&quot;true&quot;/&gt;\r\n    &lt;/tx:attributes&gt;\r\n&lt;/tx:advice&gt;\r\n&lt;!-- aop --&gt;\r\n&lt;aop:config&gt;\r\n    &lt;aop:advisor advice-ref=&quot;txAdvice&quot; pointcut=&quot;execution(* cn.itcast.ssm.service.impl.*.*(..))&quot;/&gt;\r\n&lt;/aop:config&gt;\r\n\r\n&lt;/beans&gt;</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>整合springmvc</p>\r\n\r\n<ul>\r\n	<li>创建<code>springmvc.xml</code>文件，配置处理器映射器 、 适配器、视图解析器</li>\r\n</ul>\r\n\r\n<pre>\r\n<code>&lt;context:component-scan base-package=&quot;cn.itcast.ssm.controller&quot;&gt;&lt;/context:component-scan&gt;\r\n\r\n&lt;!-- 使用 mvc:annotation-driven 加载注解映射器和注解适配器配置--&gt;\r\n&lt;mvc:annotation-driven&gt;&lt;/mvc:annotation-driven&gt;\r\n\r\n&lt;!-- 视图解析器 解析jsp解析，默认使用jstl标签，classpath下的得有jstl的包\r\n --&gt;\r\n&lt;bean class=&quot;org.springframework.web.servlet.view.InternalResourceViewResolver&quot;&gt;\r\n    &lt;!-- 配置jsp路径的前缀 --&gt;\r\n    &lt;property name=&quot;prefix&quot; value=&quot;/WEB-INF/jsp/&quot;/&gt;\r\n    &lt;!-- 配置jsp路径的后缀 --&gt;\r\n    &lt;property name=&quot;suffix&quot; value=&quot;.jsp&quot;/&gt;\r\n&lt;/bean&gt;</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>配置前端控制器</p>\r\n\r\n<ul>\r\n	<li>在<code>web.xml</code>中加入如下内容</li>\r\n	<li>contextConfigLocation配置springmvc加载的配置文件（配置处理器映射器、适配器等等）&nbsp;\r\n	<ul>\r\n		<li>如果不配置contextConfigLocation，默认加载的是/WEB-INF/servlet名称-serlvet.xml（springmvc-servlet.xml）</li>\r\n	</ul>\r\n	</li>\r\n	<li>在url-pattern中&nbsp;\r\n	<ul>\r\n		<li>填入<code>*.action</code>，表示访问以.action结尾 由DispatcherServlet进行解析</li>\r\n		<li>填入<code>/</code>，所有访问的地址都由DispatcherServlet进行解析，对于静态文件的解析需要配置不让DispatcherServlet进行解析，使用此种方式可以实现RESTful风格的url</li>\r\n	</ul>\r\n	</li>\r\n</ul>\r\n\r\n<pre>\r\n<code>&lt;!-- springmvc前端控制器 --&gt;\r\n    &lt;servlet&gt;\r\n        &lt;servlet-name&gt;springmvc&lt;/servlet-name&gt;\r\n        &lt;servlet-class&gt;org.springframework.web.servlet.DispatcherServlet&lt;/servlet-class&gt;\r\n\r\n        &lt;init-param&gt;\r\n            &lt;param-name&gt;contextConfigLocation&lt;/param-name&gt;\r\n            &lt;param-value&gt;classpath:spring/springmvc.xml&lt;/param-value&gt;\r\n        &lt;/init-param&gt;\r\n    &lt;/servlet&gt;\r\n\r\n&lt;servlet-mapping&gt;\r\n    &lt;servlet-name&gt;springmvc&lt;/servlet-name&gt;\r\n    &lt;url-pattern&gt;*.action&lt;/url-pattern&gt;\r\n&lt;/servlet-mapping&gt;</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>编写Controller（Handler）</p>\r\n\r\n<pre>\r\n<code>@Congtroller\r\n\r\n@RequestMapping(&quot;/items&quot;) //窄化路径\r\npublic class ItemsController {\r\n    @Autowired\r\n    private ItemsService itemsService;\r\n\r\n    //商品查询\r\n    @RequestMapping(&quot;/queryItems&quot;) //实际网址后面跟了.action\r\n    public ModelAndView queryItems(HttpServletRequest request) throws Exception {\r\n        List&lt;ItemsCustom&gt; itemsList = itemsService.findItemsList(null);\r\n\r\n        //返回ModelAndView\r\n        ModelAndView modelAndView = new ModelAndView();\r\n\r\n        //相当于request的setAttribute，在jsp页面中通过itemsList取数据\r\n        modelAndView.addObject(&quot;itemsList&quot;,itemsList);\r\n\r\n        return modelAndView;\r\n    }\r\n}</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>编写JSP页面</p>\r\n\r\n<pre>\r\n<code>&lt;c:forEach items=&quot;${itemsList }&quot; var=&quot;item&quot;&gt;\r\n&lt;tr&gt;\r\n    &lt;td&gt;${item.name }&lt;/td&gt;\r\n    &lt;td&gt;${item.price }&lt;/td&gt;\r\n    &lt;td&gt;&lt;fmt:formatDate value=&quot;${item.createtime}&quot; pattern=&quot;yyyy-MM-dd HH:mm:ss&quot;/&gt;&lt;/td&gt;\r\n    &lt;td&gt;${item.detail }&lt;/td&gt;\r\n\r\n    &lt;td&gt;&lt;a href=&quot;${pageContext.request.contextPath }/items/editItems.action?id=${item.id}&quot;&gt;修改&lt;/a&gt;&lt;/td&gt;\r\n\r\n&lt;/tr&gt;\r\n&lt;/c:forEach&gt;</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>加载spring容器</p>\r\n\r\n<ul>\r\n	<li>在<code>web.xml</code>中，添加spring容器监听器，加载spring容器</li>\r\n</ul>\r\n\r\n<pre>\r\n<code>&lt;context-param&gt;\r\n    &lt;param-name&gt;contextConfigLocation&lt;/param-name&gt;\r\n    &lt;param-value&gt;/WEB-INF/classes/spring/applicationContext-*.xml&lt;/param-value&gt;\r\n&lt;/context-param&gt;\r\n\r\n&lt;listener&gt;\r\n    &lt;listener-class&gt;org.springframework.web.context.ContextLoaderListener&lt;/listener-class&gt;\r\n&lt;listener&gt;</code></pre>\r\n',1,'2018-05-18 22:43:22'),(57,'Spring MVC3在controller和视图之间传递参数的方法','<p>Spring MVC3在controller和视图之间传递参数的方法：</p>\r\n\r\n<p>一, 从controller往视图传递值， controller&mdash;-&gt;视图</p>\r\n\r\n<p>1）简单类型，如int, String，直接写在controller方法的参数里，是无法传递到视图页面上的（经测试）。</p>\r\n\r\n<p>（而用<code>@RequestParam(&quot;name&quot;)</code>注解，可以从视图上，或地址中加<code>?name=***</code>传递到controller方法里）</p>\r\n\r\n<p>2）可以用<code>Map&lt;String, Object&gt;</code>，其键值可以在页面上用EL表达式${键值名}得到，</p>\r\n\r\n<p>3）也可以用Model类对象来传递，有addAttribute(key, value)方法，其键值可以在页面上用EL表达式${键值名}得到，</p>\r\n\r\n<p>如果用addAttribute(value)这个方法，会将类型名的首字母改成小写后，作为键值名传递过去，例如&rdquo;ok&rdquo;在页面上用<code>${string}</code>得到，而一个复合类对象，如User类对象，页面上用<code>${user}</code>得到该对象，用<code>${user.propertyName}</code>得到其属性，这是用Model的一大优势。&nbsp;<br />\r\n例如，<code>model.addAttribute(new User(&quot;my姓名&quot;,&quot;我的爱好有游泳打球&quot;));</code>&nbsp;<br />\r\n这样页面上就能用<code>${user.name}</code>和<code>${user.hobby}</code>打印对应属性</p>\r\n\r\n<pre>\r\n<code>     @RequestMapping(value={&quot;/&quot;,&quot;/hello&quot;})\r\n     public String hello(int id,Map&lt;String,Object&gt; map) {\r\n          System.out.println(id);\r\n          System.out.println(&quot;hello&quot;);\r\n          map.put(&quot;hello&quot;, &quot;world&quot;);\r\n          return &quot;hello&quot;;\r\n     }\r\n\r\n     @RequestMapping(value=&quot;/say&quot;)\r\n     public String say(@RequestParam int id,Model model) {\r\n          System.out.println(&quot;say&quot;);\r\n          model.addAttribute(&quot;hello&quot;, &quot;value&quot;);\r\n          //使用Object的类型作为key,String--&gt;string\r\n          model.addAttribute(&quot;ok&quot;);\r\n          return &quot;hello&quot;;\r\n     }</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>二，从视图向controller传递值， controller &lt;&mdash; 视图</p>\r\n\r\n<p>1）简单类型，如int, String, 应在变量名前加@RequestParam注解，&nbsp;<br />\r\n例如：</p>\r\n\r\n<pre>\r\n<code>       @RequestMapping(&quot;hello3&quot;)\r\n       public String hello3( @RequestParam(&quot;name&quot; ) String name,\r\n                               @RequestParam(&quot;hobby&quot; ) String hobby){\r\n            System. out.println(&quot;name=&quot; +name);\r\n            System. out.println(&quot;hobby=&quot; +hobby);       \r\n             return &quot;hello&quot; ;\r\n      }</code></pre>\r\n\r\n<p>&nbsp;（注意：@RequestParam与前台的name对应）</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>但这样就要求输入里面必须有这两个参数了，可以用required=false来取消，例如：</p>\r\n\r\n<pre>\r\n<code>@RequestParam(value=&quot;name&quot;,required=false) String name</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>但经测试也可以完全不写这些注解，即方法的参数写String name，效果与上面相同。</p>\r\n\r\n<p>2）对象类型：</p>\r\n\r\n<pre>\r\n<code>       @RequestMapping(&quot;/hello4&quot; )\r\n       public String hello4(User user){\r\n            System.out.println(&quot;user.getName()=&quot; +user.getName());\r\n            System.out.println(&quot;user.getHobby()=&quot; +user.getHobby());\r\n            return &quot;hello&quot;;\r\n      }</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Spring MVC会按：&nbsp;<br />\r\n&ldquo;HTTP请求参数名 = 命令/表单对象的属性名&rdquo;&nbsp;<br />\r\n的规则自动绑定请求数据，支持&ldquo;级联属性名&rdquo;，自动进行基本类型数据转换。</p>\r\n\r\n<p>即有一个User类，如下</p>\r\n\r\n<pre>\r\n<code>package model;\r\n\r\npublic class User {\r\n       private String name ;\r\n       private String hobby ;\r\n       public User(){\r\n\r\n      }\r\n       public User(String name, String hobby) {\r\n             this.name = name;\r\n             this.hobby = hobby;\r\n      }\r\n//...get/set方法略  </code></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>则页面上可以用</p>\r\n\r\n<pre>\r\n<code>&lt;form name=&quot;form1&quot; action=&quot;hello4&quot; method=&quot;post&quot;&gt;\r\n     &lt;input type=&quot;text&quot; name=&quot;name&quot;/&gt;\r\n     &lt;input type=&quot;text&quot; name=&quot;hobby&quot;/&gt;\r\n...</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>提交后，把值直接绑定到user对象上。</p>\r\n\r\n<p>此外，还可以限定提交方法为POST，即修改方法的@RequestMapping注解为</p>\r\n\r\n<pre>\r\n<code>@RequestMapping(value=&quot;/hello4&quot;,method=RequestMethod.POST)</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>最后，注意，如果这里提交过来的字符出现乱码，应该在web.xml里加入如下filter:</p>\r\n\r\n<pre>\r\n<code>&lt;filter&gt;\r\n   &lt;filter-name&gt;encodingFilter&lt;/filter-name&gt;\r\n   &lt;filter-class&gt;org.springframework.web.filter.CharacterEncodingFilter &lt;/filter-class&gt;\r\n   &lt;init-param&gt;\r\n      &lt;param-name&gt;encoding&lt;/param-name&gt;\r\n      &lt;param-value&gt;utf8&lt;/param-value&gt;\r\n   &lt;/init-param&gt;\r\n&lt;/filter&gt;\r\n\r\n&lt;filter-mapping&gt;\r\n   &lt;filter-name&gt;encodingFilter&lt;/filter-name &gt;\r\n   &lt;url-pattern&gt;/*&lt;/url-pattern&gt;\r\n&lt;/filter-mapping&gt;</code></pre>\r\n',1,'2018-05-18 22:44:06'),(58,'在Java中使用MD5和BASE64','<p>MD5：</p>\r\n\r\n<p>　　在上一篇《<a href=\"http://www.cnblogs.com/fjdingsd/p/4907211.html\">Servlet的学习之Session（5）</a>》中，为了能使获取的所有随机数都能有相同的位数，我们采用MD5获取随机数的消息摘要（或称数据指纹、数据摘要等等）。</p>\r\n\r\n<p>　　MD5可以将所有的数字组合进行一个算法的运算得出一个新的数字组合，并且这个新的数字组合都是128位，也称为MD5码。MD5码是不可逆的，即无法通过MD5码来进行反向运算得到原始的数据。MD5的应用场合非常多，比如保存用户密码（防止数据库中用户密码被管理员看到，所以数据库中的密码不许使用明文密码），或者文件校验（防止下载的文件是被别人修改后的文件而不是官方原文件，比如苹果开发工具的XCodeGhost事件），或者光盘破损校验等等。</p>\r\n\r\n<p>　　在Java中通过MessageDigest对象来调用方法获取某些数字组合的MD5码（顺便说一句，MessageDigest也可以用来获取SHA校验码）。通过MessageDigest对象调用digest方法来将数字组合转变为字符数组：</p>\r\n\r\n<p><img alt=\"复制代码\" src=\"http://common.cnblogs.com/images/copycode.gif\" style=\"margin:0px\" /></p>\r\n\r\n<pre>\r\n1     String data = &quot;1&quot;;\r\n2         \r\n3     MessageDigest md = MessageDigest.getInstance(&quot;md5&quot;);\r\n4     byte[] md5 = md.digest(data.getBytes());\r\n5         \r\n6 　　System.out.println(Arrays.toString(md5));</pre>\r\n\r\n<p><img alt=\"复制代码\" src=\"http://common.cnblogs.com/images/copycode.gif\" style=\"margin:0px\" /></p>\r\n\r\n<p>获得的字节数组都是128位，即16字节。换句话说经过MD5后的字符数组中有16个元素，因为Java中byte的范围为-128~127,所以每个元素都在这范围内：</p>\r\n\r\n<p>　　<img alt=\"\" src=\"https://images2015.cnblogs.com/blog/787876/201510/787876-20151024192027005-107474591.png\" style=\"margin:0px\" /></p>\r\n\r\n<p>注意，经过md5后的字符数组中含有负数元素，因此如果将这个字符数组进行转换成字符串，查询GB2312或者UTF-8都是不合适的会出现乱码例如：</p>\r\n\r\n<pre>\r\n1     String sData = new String(md5,&quot;utf-8&quot;);\r\n2     System.out.println(sData);</pre>\r\n\r\n<p>　　<img alt=\"\" src=\"https://images2015.cnblogs.com/blog/787876/201510/787876-20151024192228161-1238990116.png\" style=\"margin:0px\" /></p>\r\n\r\n<p>那么我们将如何使这个字节数组转换成一个没有乱码的字符串作为一种随机数？我们可以采用&ldquo;Base64&rdquo;编码。</p>\r\n\r\n<p>Base64编码：</p>\r\n\r\n<p>　　Base64编码是把每3个8位字节（3*8=24）转成4个6位字节（4*6=24），且在每个6位字节前补两个0，重新形成8位一个字节的形式，这样总的长度还是相同的，并且保证最高位不是1（即不是负数）。</p>\r\n\r\n<p>　　如果最后剩下的字符不足3个字符，则用0填充高位，输出字符使用&ldquo;=&rdquo;。因此编码后的字符串末尾可能会出现一个或两个&ldquo;=&rdquo;。</p>\r\n\r\n<p>　　根据上述原理，最高两位均为0，那么剩下6位全为1二进制对应的十进制为63，所以最大数不会超过63，根据这64个数进行一个码值与字符的对应，就成了base64编码，对应编码表如下图所示：</p>\r\n\r\n<p>　　<img alt=\"\" src=\"https://images2015.cnblogs.com/blog/787876/201510/787876-20151024192321567-1169492591.png\" style=\"margin:0px\" /></p>\r\n\r\n<p>　　在Java中我们使用BASE64Encoder对象调用encode方法来将某个字节数组进行编码。</p>\r\n\r\n<p>　　我们将上面的MD5码进行base64编码：</p>\r\n\r\n<pre>\r\n1     BASE64Encoder be = new BASE64Encoder();\r\n2     String base64 = be.encode(md5);\r\n3     System.out.println(base64);</pre>\r\n\r\n<p>　　可以看到这时将乱码都对应成字符了：</p>\r\n\r\n<p>　　<img alt=\"\" src=\"https://images2015.cnblogs.com/blog/787876/201510/787876-20151024192414755-1735413555.png\" style=\"margin:0px\" /></p>\r\n\r\n<p>　　注意，BASE64Encoder无法查看其API文档，因为sun公司没有将其正式发布出来，也就没有相应的javadoc文档可以查阅。只能通过下载相应的jar包或者通过网上查阅，如果在开发IDE中发现无法找到sun.misc.BASE64Encode请在网上下载这个JAR包并导入即可。或者请看这篇博客的方法： 《<a href=\"http://blog.sina.com.cn/s/blog_5a6efa330102v8st.html\" target=\"_blank\">BASE64Encoder及BASE64Decoder的正确用法</a>》</p>\r\n',1,'2018-05-18 22:44:54'),(59,'get请求中url传参中文乱码问题','<p>在项目中经常会遇到中文传参数，在后台接收到乱码问题。那么在遇到这种情况下我们应该怎么进行处理让我们传到后台接收到的参数不是乱码是我们想要接收的到的，下面就是我的一些认识和理解。</p>\r\n\r\n<p>&nbsp;一：get请求url中带有中文参数，有三种方式进行处理防止中文乱码</p>\r\n\r\n<p>&nbsp; &nbsp; 1、如果使用tomcat作为服务器，那么修改tomcat配置文件conf/server.xml中，在&nbsp;&nbsp;&lt;Connector&nbsp;port=&quot;8082&quot;&nbsp;protocol=&quot;HTTP/1.1&quot;&nbsp;&nbsp;中加入&nbsp;&nbsp;URIEncoding=&quot;utf-8&quot;的编码集</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; 2、前台需要对中文参数进行编码，调用js方法encodeURI（url），将url编码，然后请求。</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 后台接受时，需处理String str = new&nbsp;String(request.getParameter(&quot;param&quot;).getBytes(&quot;iso8859-1&quot;),&quot;UTF-8&quot;);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 原因：tomcat不设置编码时，默认是iso8859-1，即tomcat默认会以iso8859-1编码接收get参数。 以上操作是将参数以iso8859-1编码转化为字节数组，然后再以UTF-8将字节数组转化为字符串。</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 另外需注意在框架的使用中：request.setCharacterEncoding(encoding);只对post请求有效。而且，spring的CharacterEncodingFilter也只是做了request(和response）.setCharacterEncoding(encoding);的操作。所以spring的filter配置不作用于get参数接收。</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; 3、解决get请求，后台接受中文参数乱码处理的方法（搜索功能带参数）</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; （1）前台获取数据，在js中进行编码处理</p>\r\n\r\n<p>&nbsp;<img alt=\"\" src=\"https://img-blog.csdn.net/20151124142305929?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" style=\"margin:0px\" /></p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; encodeURI函数采用utf-8进行编码，而在服务器的进行解码时候，默认都不是以uft-8进行解码，所以就会出现乱码。</p>\r\n\r\n<p>两次encodeURI,第一次编码得到的是UTF-8形式的URL，第二次编码得到的依然是UTF-8形式的URL，但是在效果上相当于首先进行了一&nbsp;次UTF-8编码(此时已经全部转换为ASCII字符)，再进行了一次iso-8859-1编码，因为对英文字符来说UTF-8编码和ISO-&nbsp;8859-1编码的效果相同。</p>\r\n\r\n<p>&nbsp;（2）后台解码处理</p>\r\n\r\n<p>在后台接收参数时候，首先通过request.getParameter()自动进行第一次解码(可能是&nbsp;gb2312,gbk,utf-8,iso-8859-1等字符集,对结果无影响)得到ascii字符，然后再使用UTF-8进行第二次解码，通常使用&nbsp;java.net.URLDecoder(&quot;&quot;,&quot;UTF-8&quot;)方法。</p>\r\n\r\n<p>&nbsp;<img alt=\"\" src=\"https://img-blog.csdn.net/20151124142342356?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" style=\"margin:0px\" /></p>\r\n\r\n<p>两次编码两次解码的过程为：</p>\r\n\r\n<p>UTF-8编码-&gt;UTF-8(iso-8859-1)编码-&gt;iso-8859-1解码-&gt;UTF-8解码，编码和解码的过程是对称的，所以不会出现乱码。</p>\r\n\r\n<p>注：&nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp; 1：这种两次encodeURI方式不用去知道服务器的解码方式，也可以得到正确的数据。</p>\r\n\r\n<p>&nbsp;&nbsp; 2:get请求建议尽量不带中文参数，如果使用建议使用两次encodeURI进行编码</p>\r\n',1,'2018-05-18 22:46:13');

/*Table structure for table `t_diarytype` */

DROP TABLE IF EXISTS `t_diarytype`;

CREATE TABLE `t_diarytype` (
  `diaryTypeId` int(11) NOT NULL AUTO_INCREMENT,
  `typeName` varchar(30) DEFAULT NULL,
  PRIMARY KEY (`diaryTypeId`)
) ENGINE=InnoDB AUTO_INCREMENT=8 DEFAULT CHARSET=utf8;

/*Data for the table `t_diarytype` */

insert  into `t_diarytype`(`diaryTypeId`,`typeName`) values (1,'工作相关'),(2,'生活点滴'),(4,'人生感叹'),(7,'精彩记录');

/*Table structure for table `t_user` */

DROP TABLE IF EXISTS `t_user`;

CREATE TABLE `t_user` (
  `userId` int(11) NOT NULL AUTO_INCREMENT,
  `userName` varchar(20) NOT NULL,
  `password` varchar(50) DEFAULT NULL,
  `nickName` varchar(20) DEFAULT NULL,
  `imageName` varchar(40) DEFAULT NULL,
  `mood` varchar(200) DEFAULT NULL,
  PRIMARY KEY (`userName`),
  UNIQUE KEY `userId` (`userId`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8;

/*Data for the table `t_user` */

insert  into `t_user`(`userId`,`userName`,`password`,`nickName`,`imageName`,`mood`) values (1,'tan','4QrcOUm6Wau+VuBX8g+IPg==','Fantasy_99','20180415054034.jpg','努力学习		\r\n							');

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;
